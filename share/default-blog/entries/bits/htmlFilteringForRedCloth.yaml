--- !hobix.com,2004/entry 
title: HTML Filtering For RedCloth
author: why
created: 2005-01-11 22:57:25.169086 -05:00
summary: >
  Oh, here's a very bad habit for me to start.  Releasing patches to my blog
  rather than releasing actual software.  This is extremely tacky.


  <div class="update">


  *Warning:* flgr is testing out exploits for RedHanded comments in this thread.
  Currently, a mailto window is popping up and he has managed to disable the
  comments box!!  I'm going to keep up with fixes, but you have two choices: (1)
  come participate in the mayhem or (2) stay right where you are.  (I hope it
  won't get NSFW, but it could, I suppose.)


  </div>

content: >
  This isn't a patch for RedCloth, it's a method you can use to filter out HTML in
  general.  But it works nicely with RedCloth output.  I use it for the comments
  on this site.  It's the best solution I can think of for world-writable files.


  <pre>
   class String
       ## Dictionary describing allowable HTML
       ## tags and attributes.
       BASIC_TAGS = {
           'a' => ['href', 'title'],
           'img' => ['src', 'alt', 'title'],
           'br' => [],
           'i' => nil,
           'u' => nil,
           'b' => nil,
           'pre' => nil,
           'kbd' => nil,
           'code' => ['lang'],
           'cite' => nil,
           'strong' => nil,
           'em' => nil,
           'ins' => nil,
           'sup' => nil,
           'sub' => nil,
           'del' => nil,
           'table' => nil,
           'tr' => nil,
           'td' => nil,
           'th' => nil,
           'ol' => nil,
           'ul' => nil,
           'li' => nil,
           'p' => nil,
           'h1' => nil,
           'h2' => nil,
           'h3' => nil,
           'h4' => nil,
           'h5' => nil,
           'h6' => nil,
           'blockquote' => ['cite']
       }

       ## Method which cleans the String of HTML tags
       ## and attributes outside of the allowed list.
       def clean_html!( tags = BASIC_TAGS )
           gsub!( /<(\/*)(\w+)([^>]*)>/ ) do
               raw = $~
               tag = raw[2].downcase
               if tags.has_key? tag
                   pcs = [tag]
                   tags[tag].each do |prop|
                       ['"', "'", ''].each do |q|
                           q2 = ( q != '' ? q : '\s' )
                           if raw[3] =~ /#{prop}\s*=\s*#{q}([^#{q2}]+)#{q}/i
                               pcs << "#{prop}=\"#{$1.gsub('"', '\\"')}\""
                               break
                           end
                       end
                   end if tags[tag]
                   "<#{raw[1]}#{pcs.join " "}>"
               else
                   " "
               end
           end
       end
   end
  </pre>


  Be sure to use it _after_ you convert your Textile to HTML.


  <pre>
   comment = RedCloth.new( entry.comment ).to_html
   comment.clean_html!
  </pre>


  I'd like to make RedCloth's built-in filter allow this kind of customization. It
  may even be worthwhile to have it scan for allowed CSS within a style
  declaration.  On a Wiki, it's nice to allow people to come up with widths and
  floating directions and detailed colors, you know?


  What do you think
